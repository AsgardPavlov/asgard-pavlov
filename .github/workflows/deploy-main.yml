name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: docker.io
  WEB_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/asgard-pavlov-web
  NGINX_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/asgard-pavlov-nginx
  DEPLOY_PATH: /home/asgard/asgard-pavlov

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push web
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.WEB_IMAGE }}:latest
            ${{ env.WEB_IMAGE }}:${{ github.sha }}
#          build-args: |
#            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          cache-from: type=registry,ref=${{ env.WEB_IMAGE }}:latest
          cache-to: type=inline

      - name: Build and push nginx
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          push: true
          tags: |
            ${{ env.NGINX_IMAGE }}:latest
            ${{ env.NGINX_IMAGE }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.NGINX_IMAGE }}:latest
          cache-to: type=inline

  deploy:
    needs: build-and-push
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host *
            StrictHostKeyChecking no" > ~/.ssh/config

      - name: Create deployment directories
        run: |
          ssh -i ~/.ssh/id_rsa asgard@${{ secrets.DO_HOST }} "
            mkdir -p ${DEPLOY_PATH}/{nginx,certbot/{conf,www}}
          "

      - name: Copy deployment files
        run: |
          # Make scripts executable
          chmod +x .github/deployment/deploy.sh
          
          # Copy files to server
          scp docker-compose.yml asgard@${{ secrets.DO_HOST }}:${DEPLOY_PATH}/
          scp nginx/nginx.conf asgard@${{ secrets.DO_HOST }}:${DEPLOY_PATH}/nginx/
          scp .github/deployment/deploy.sh asgard@${{ secrets.DO_HOST }}:${DEPLOY_PATH}/deploy.sh
          scp nginx/entrypoint.sh asgard@${{ secrets.DO_HOST }}:${DEPLOY_PATH}/nginx/entrypoint.sh

          # Set permissions on remote server
          ssh asgard@${{ secrets.DO_HOST }} "
            chmod +x ${DEPLOY_PATH}/deploy.sh ${DEPLOY_PATH}/nginx/entrypoint.sh
          "

      - name: Execute deployment
        env:
          GITHUB_SHA: ${{ github.sha }}
          ENV_FILE: ${{ secrets.ENV_FILE }}
        run: |
          ssh asgard@${{ secrets.DO_HOST }} "
            cd ${DEPLOY_PATH} && \
            export GITHUB_SHA=${GITHUB_SHA} && \
            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} && \
            export DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }} && \
            export ENV_FILE='${ENV_FILE}' && \
            ./deploy.sh
          "